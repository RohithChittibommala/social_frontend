[{"D:\\Social\\client\\src\\index.js":"1","D:\\Social\\client\\src\\App.js":"2","D:\\Social\\client\\src\\components\\navbar\\Navbar.jsx":"3","D:\\Social\\client\\src\\components\\navbar\\NavbarElements.jsx":"4","D:\\Social\\client\\src\\components\\Navbar\\Navbar.jsx":"5","D:\\Social\\client\\src\\components\\Navbar\\NavbarElements.jsx":"6","D:\\Social\\client\\src\\components\\Home\\Home.jsx":"7","D:\\Social\\client\\src\\components\\Login_Register\\Login.jsx":"8","D:\\Social\\client\\src\\components\\Login_Register\\LoginElements.jsx":"9","D:\\Social\\client\\src\\components\\Profile\\Profile.jsx":"10","D:\\Social\\client\\src\\components\\Profile\\ProfileElements.jsx":"11","D:\\Social\\client\\src\\components\\Login_Register\\Register.jsx":"12","D:\\social\\client\\src\\index.js":"13","D:\\social\\client\\src\\App.js":"14","D:\\social\\client\\src\\components\\Login_Register\\Register.jsx":"15","D:\\social\\client\\src\\components\\Home\\Home.jsx":"16","D:\\social\\client\\src\\components\\Navbar\\Navbar.jsx":"17","D:\\social\\client\\src\\components\\Login_Register\\Login.jsx":"18","D:\\social\\client\\src\\components\\Profile\\Profile.jsx":"19","D:\\social\\client\\src\\components\\Login_Register\\LoginElements.jsx":"20","D:\\social\\client\\src\\components\\Navbar\\NavbarElements.jsx":"21","D:\\social\\client\\src\\components\\Profile\\ProfileElements.jsx":"22","D:\\Social\\client\\src\\components\\Toasts\\Toast.jsx":"23","D:\\Social\\client\\src\\components\\posts\\Post.jsx":"24","D:\\Social\\client\\src\\components\\posts\\PostElements.jsx":"25","D:\\Social\\client\\src\\components\\createpost\\CreatePost.jsx":"26","D:\\Social\\client\\src\\components\\createpost\\CreateElements.jsx":"27","D:\\Social\\client\\src\\components\\state\\Store.jsx":"28","D:\\Social\\client\\src\\components\\state\\reducer.js":"29","D:\\Social\\client\\src\\components\\state\\actionTypes.js":"30","D:\\Social\\client\\src\\utils\\toastSettings.js":"31","D:\\Social\\client\\src\\utils\\fonts.js":"32","D:\\Social\\client\\src\\components\\Profile\\OtherUserProfile.jsx":"33","D:\\Social\\client\\src\\components\\ResetPassword\\ResetPassword.jsx":"34"},{"size":665,"mtime":1611304592980,"results":"35","hashOfConfig":"36"},{"size":1632,"mtime":1611324863786,"results":"37","hashOfConfig":"36"},{"size":690,"mtime":1607018345156,"results":"38","hashOfConfig":"36"},{"size":1500,"mtime":1607018268822,"results":"39","hashOfConfig":"36"},{"size":1076,"mtime":1610867234637,"results":"40","hashOfConfig":"36"},{"size":1567,"mtime":1610981829827,"results":"41","hashOfConfig":"36"},{"size":1580,"mtime":1611222831462,"results":"42","hashOfConfig":"36"},{"size":5320,"mtime":1611393477850,"results":"43","hashOfConfig":"36"},{"size":4360,"mtime":1611340608403,"results":"44","hashOfConfig":"36"},{"size":5067,"mtime":1611393413347,"results":"45","hashOfConfig":"36"},{"size":5481,"mtime":1611140297325,"results":"46","hashOfConfig":"36"},{"size":3700,"mtime":1611295646039,"results":"47","hashOfConfig":"36"},{"size":503,"mtime":1607014630688,"results":"48","hashOfConfig":"49"},{"size":825,"mtime":1608991715861,"results":"50","hashOfConfig":"49"},{"size":3736,"mtime":1608895556700,"results":"51","hashOfConfig":"49"},{"size":250,"mtime":1608991116230,"results":"52","hashOfConfig":"49"},{"size":808,"mtime":1608643941071,"results":"53","hashOfConfig":"49"},{"size":3146,"mtime":1608993752507,"results":"54","hashOfConfig":"49"},{"size":2573,"mtime":1608645292280,"results":"55","hashOfConfig":"49"},{"size":3092,"mtime":1608895958832,"results":"56","hashOfConfig":"49"},{"size":1684,"mtime":1608644374777,"results":"57","hashOfConfig":"49"},{"size":2197,"mtime":1608645197867,"results":"58","hashOfConfig":"49"},{"size":389,"mtime":1609584021401,"results":"59","hashOfConfig":"36"},{"size":5748,"mtime":1611338369780,"results":"60","hashOfConfig":"36"},{"size":3790,"mtime":1611307498790,"results":"61","hashOfConfig":"36"},{"size":3168,"mtime":1611137894127,"results":"62","hashOfConfig":"36"},{"size":1477,"mtime":1611070765696,"results":"63","hashOfConfig":"36"},{"size":485,"mtime":1611249370751,"results":"64","hashOfConfig":"36"},{"size":1446,"mtime":1611304696656,"results":"65","hashOfConfig":"36"},{"size":1072,"mtime":1611249793765,"results":"66","hashOfConfig":"36"},{"size":206,"mtime":1611305549150,"results":"67","hashOfConfig":"36"},{"size":42,"mtime":1611248982679,"results":"68","hashOfConfig":"36"},{"size":5852,"mtime":1611307338778,"results":"69","hashOfConfig":"36"},{"size":2926,"mtime":1611427316184,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1wirmm3",{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},"qpvi60",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"73"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Social\\client\\src\\index.js",[],["150","151"],"D:\\Social\\client\\src\\App.js",["152"],"import Navbar from \"./components/Navbar/Navbar\";\nimport \"./App.css\";\nimport { Route, Switch, useHistory } from \"react-router-dom\";\nimport Home from \"./components/Home/Home.jsx\";\nimport Login from \"./components/Login_Register/Login.jsx\";\nimport Profile from \"./components/Profile/Profile.jsx\";\nimport CreatePost from \"./components/createpost/CreatePost.jsx\";\nimport Register from \"./components/Login_Register/Register.jsx\";\nimport Toast from \"./components/Toasts/Toast\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ResetPassword from \"./components/ResetPassword/ResetPassword.jsx\";\nimport { useContext, useEffect } from \"react\";\nimport { Store } from \"./components/state/Store\";\nimport OtherUserProfile from \"./components/Profile/OtherUserProfile\";\nfunction App() {\n  const history = useHistory();\n\n  const [state] = useContext(Store);\n  const { isAuthenicated } = state;\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (!history.location.pathname.startsWith(\"/reset\")) history.push(\"/login\");\n  }, [history]);\n  return (\n    <>\n      {isAuthenicated && <Navbar />}\n      <Toast />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/createpost\" component={CreatePost} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/profile/:id\" component={OtherUserProfile} />\n        <Route exact path=\"/reset/:id\" component={ResetPassword} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","D:\\Social\\client\\src\\components\\navbar\\Navbar.jsx",[],["153","154"],"D:\\Social\\client\\src\\components\\navbar\\NavbarElements.jsx",[],"D:\\Social\\client\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\Social\\client\\src\\components\\Navbar\\NavbarElements.jsx",[],"D:\\Social\\client\\src\\components\\Home\\Home.jsx",["155","156"],"import React, { useEffect, useContext } from \"react\";\r\nimport Post from \"../posts/Post\";\r\nimport { Store } from \"../state/Store\";\r\nimport { fetchedPosts, fetchedUserPosts } from \"../state/actionTypes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  const [state, dispatch] = useContext(Store);\r\n  const { isAuthenicated, posts } = state;\r\n  useEffect(() => {\r\n    if (isAuthenicated) {\r\n      fetch(\"http://localhost:4000/posts/allposts\", {\r\n        headers: {\r\n          Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      })\r\n        .then((posts) => posts.json())\r\n        .then((posts) => {\r\n          dispatch(fetchedPosts(posts.posts));\r\n          dispatch(fetchedUserPosts(posts.myPosts));\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [isAuthenicated, posts.length]);\r\n  return (\r\n    <div style={{ margin: \"0 auto\", width: \"935px\", padding: \"108px 0\" }}>\r\n      {posts.map(\r\n        ({\r\n          _id,\r\n          title,\r\n          description,\r\n          url,\r\n          likes,\r\n          postedBy,\r\n          comments,\r\n          createdAt,\r\n        }) => (\r\n          <Post\r\n            key={_id}\r\n            id={_id}\r\n            description={description}\r\n            title={title}\r\n            name={postedBy?.name}\r\n            url={url}\r\n            likes={likes}\r\n            userId={postedBy?._id}\r\n            imageUrl={postedBy?.imageUrl}\r\n            comments={comments}\r\n            createdAt={createdAt}\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Social\\client\\src\\components\\Login_Register\\Login.jsx",["157","158"],"import React, { useState, useContext } from \"react\";\r\nimport { Store } from \"../state/Store\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  EmailIcon,\r\n  ErrorText,\r\n  ForgotPasswordModal,\r\n  ForgotPasswordEmailInput,\r\n  FormDiv,\r\n  FormInput,\r\n  FormTitle,\r\n  IElement,\r\n  InputContainer,\r\n  LoginDiv,\r\n  LoginImage,\r\n  Page,\r\n  PasswordIcon,\r\n  SideImageDiv,\r\n  TextElement,\r\n  ForgotPasswordSubmitButton,\r\n  ForgotEmailInputContainer,\r\n} from \"./LoginElements\";\r\nimport loginImageurl from \"./assets/login.svg\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastEmmiterOptions } from \"../../utils/toastSettings\";\r\nimport Toast from \"../Toasts/Toast.jsx\";\r\nimport { userLoggedIn } from \"../state/actionTypes\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [forgotEmail, setForgotEmail] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(Store);\r\n  const handleUserLogin = async () => {\r\n    try {\r\n      const responseJSON = await fetch(\"http://localhost:4000/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await responseJSON.json();\r\n\r\n      if (data.password)\r\n        setErrors((prevState) => ({ ...prevState, password: data.password }));\r\n      else if (data.userExist)\r\n        setErrors((prevState) => ({ ...prevState, email: data.userExist }));\r\n      else if (data.user) {\r\n        if (!data.user.isVerified) {\r\n          toast.error(\r\n            \"Please click the link that is send to your email address\",\r\n            toastEmmiterOptions\r\n          );\r\n        } else {\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          history.push(\"/\");\r\n          dispatch(userLoggedIn(data.user));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      toast.error(`error occured ${error}`, toastEmmiterOptions);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleForgotPassword = () => {\r\n    setForgotEmail(\"\");\r\n    fetch(\"http://localhost:4000/forgot\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email: forgotEmail }),\r\n    })\r\n      .then((res) => {\r\n        res.json().then((res) => toast.info(res.msg, toastEmmiterOptions));\r\n      })\r\n      .catch((err) => toast.error(err, toastEmmiterOptions));\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <SideImageDiv>\r\n        <LoginImage src={loginImageurl} />\r\n      </SideImageDiv>\r\n      <LoginDiv>\r\n        <FormDiv formType={true}>\r\n          <FormTitle>{\"Login\"}</FormTitle>\r\n          <InputContainer>\r\n            <EmailIcon size=\"24px\" />\r\n            <FormInput\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              type=\"email\"\r\n              onChange={({ target }) => setEmail(target.value)}\r\n            />\r\n            <ErrorText>{errors.email}</ErrorText>\r\n          </InputContainer>\r\n          <InputContainer>\r\n            <PasswordIcon size=\"24px\" />\r\n            <FormInput\r\n              placeholder=\"Enter your password\"\r\n              type={!showPassword ? \"password\" : \"text\"}\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n            <ErrorText>{errors.password}</ErrorText>\r\n          </InputContainer>\r\n          <div className=\"password-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={() => setShowPassword((prev) => !prev)}\r\n            />\r\n            <TextElement>show password</TextElement>\r\n          </div>\r\n          <Button onClick={handleUserLogin}>Login</Button>\r\n          <InputContainer>\r\n            <TextElement color=\"blue\" onClick={() => setIsModalOpen(true)}>\r\n              Forgot Password\r\n            </TextElement>\r\n            <TextElement>\r\n              New user? create account\r\n              <IElement>\r\n                <Link to={\"/register\"}>here</Link>\r\n              </IElement>\r\n            </TextElement>\r\n          </InputContainer>\r\n        </FormDiv>\r\n        <ForgotPasswordModal\r\n          isOpen={isModalOpen}\r\n          onRequestClose={() => setIsModalOpen(false)}\r\n          style={{\r\n            overlay: {\r\n              backgroundColor: \"rgba(63, 59, 59, 0.75)\",\r\n            },\r\n          }}\r\n        >\r\n          <p style={{ fontSize: 18, margin: 10 }}>Enter your Email Address</p>\r\n          <ForgotEmailInputContainer>\r\n            <ForgotPasswordEmailInput\r\n              value={forgotEmail}\r\n              onChange={({ target }) => setForgotEmail(target.value)}\r\n            />\r\n            {forgotEmail.length > 0 && (\r\n              <ForgotPasswordSubmitButton onClick={handleForgotPassword}>\r\n                Submit\r\n              </ForgotPasswordSubmitButton>\r\n            )}\r\n          </ForgotEmailInputContainer>\r\n        </ForgotPasswordModal>\r\n      </LoginDiv>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Social\\client\\src\\components\\Login_Register\\LoginElements.jsx",[],"D:\\Social\\client\\src\\components\\Profile\\Profile.jsx",["159","160"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport {\r\n  GalleryImage,\r\n  GalleryImageDiv,\r\n  GalleryImageOverlayDiv,\r\n  GalleryWrapper,\r\n  ImageDiv,\r\n  ProfileImage,\r\n  ProfileInfoDiv,\r\n  ProfileName,\r\n  ProfileStat,\r\n  ProfileStatNum,\r\n  ProfileStatsDiv,\r\n  Wrapper,\r\n  ModalTitle,\r\n  ProfileNameDiv,\r\n  EditProfileButton,\r\n  ShowFollowersAndFollowing,\r\n  ModalUserImage,\r\n  ModalItem,\r\n  ModalUserName,\r\n  ModalUserImageDiv,\r\n  GalleryImageLikes,\r\n  GalleryImageLikesContainer,\r\n} from \"./ProfileElements\";\r\nimport { Store } from \"../state/Store\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastEmmiterOptions } from \"../../utils/toastSettings\";\r\nimport { updateUserData } from \"../state/actionTypes\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FilledHeartIcon } from \"../posts/PostElements\";\r\nfunction Profile() {\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(Store);\r\n  const { userPosts: posts, user } = state;\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalData, setModalData] = useState({ name: \"\", data: [] });\r\n  const [imageFile, setImageFile] = useState(\"\");\r\n  const { followers, following } = user;\r\n  useEffect(() => {\r\n    if (!state.isAuthenicated) history.push(\"/login\");\r\n  }, [posts, history, state.isAuthenicated]);\r\n\r\n  const handleProfileStat = (title) => {\r\n    if (title !== \"posts\") setModalData({ name: title, data: user[title] });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const renderProfileStat = (number, title) => (\r\n    <ProfileStat onClick={() => handleProfileStat(title)}>\r\n      <ProfileStatNum>{number}</ProfileStatNum>\r\n      {title}\r\n    </ProfileStat>\r\n  );\r\n\r\n  const renderModelItem = (imageUrl, name, id) => (\r\n    <ModalItem key={id}>\r\n      <ModalUserImageDiv>\r\n        <ModalUserImage src={imageUrl} />\r\n      </ModalUserImageDiv>\r\n      <ModalUserName to={`/profile/${id}`}>{name}</ModalUserName>\r\n    </ModalItem>\r\n  );\r\n\r\n  const renderGalleryImageDiv = (post, key) => (\r\n    <GalleryImageDiv key={key}>\r\n      <GalleryImageOverlayDiv>\r\n        <GalleryImageLikesContainer>\r\n          <FilledHeartIcon size={22} />\r\n          <GalleryImageLikes>{post.likes.length}</GalleryImageLikes>\r\n        </GalleryImageLikesContainer>\r\n      </GalleryImageOverlayDiv>\r\n      <GalleryImage src={post.url} />\r\n    </GalleryImageDiv>\r\n  );\r\n  const handleImageUpload = (e) => {\r\n    const { target } = e;\r\n    const { files } = target;\r\n    const [uploadedImage] = files;\r\n    setImageFile(uploadedImage);\r\n  };\r\n  const postData = async () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", imageFile);\r\n    data.append(\"upload_preset\", \"social-app\");\r\n    data.append(\"cloud_name\", \"rohith\");\r\n    try {\r\n      const responseJSON = await fetch(\r\n        \"https://api.cloudinary.com/v1_1/rohith/image/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: data,\r\n        }\r\n      );\r\n      const { url } = await responseJSON.json();\r\n      updateProfileImage(url);\r\n    } catch (error) {\r\n      //// handle errpr\r\n    }\r\n  };\r\n  const updateProfileImage = async (url) => {\r\n    try {\r\n      const responseJSON = await fetch(\"http://localhost:4000/users/update\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n        body: JSON.stringify({ url }),\r\n      });\r\n      const data = await responseJSON.json();\r\n      console.log(data);\r\n      if (data.error) toast.error(`${data.error}`, toastEmmiterOptions);\r\n      else {\r\n        toast.success(\"profile  updated\", toastEmmiterOptions);\r\n        dispatch(updateUserData(data));\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <ImageDiv>\r\n          <ProfileImage src={state?.user?.imageUrl} />\r\n        </ImageDiv>\r\n        <ProfileInfoDiv>\r\n          <ProfileNameDiv>\r\n            <ProfileName>{user.name}</ProfileName>\r\n            <EditProfileButton>Edit Profile</EditProfileButton>\r\n          </ProfileNameDiv>\r\n          <ProfileStatsDiv>\r\n            {renderProfileStat(posts.length, \"posts\")}\r\n            {renderProfileStat(followers?.length, \"followers\")}\r\n            {renderProfileStat(following?.length, \"following\")}\r\n          </ProfileStatsDiv>\r\n        </ProfileInfoDiv>\r\n      </Wrapper>\r\n      <ShowFollowersAndFollowing\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(63, 59, 59, 0.75)\",\r\n          },\r\n        }}\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n      >\r\n        <ModalTitle>{modalData.name}</ModalTitle>\r\n        {modalData?.data?.map((user) =>\r\n          renderModelItem(user.imageUrl, user.name, user._id)\r\n        )}\r\n      </ShowFollowersAndFollowing>\r\n      <GalleryWrapper>\r\n        {posts.map((post, index) =>\r\n          post.url ? renderGalleryImageDiv(post, index) : null\r\n        )}\r\n      </GalleryWrapper>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\Social\\client\\src\\components\\Profile\\ProfileElements.jsx",[],"D:\\Social\\client\\src\\components\\Login_Register\\Register.jsx",[],"D:\\social\\client\\src\\index.js",[],["161","162"],"D:\\social\\client\\src\\App.js",[],"D:\\social\\client\\src\\components\\Login_Register\\Register.jsx",[],"D:\\social\\client\\src\\components\\Home\\Home.jsx",[],"D:\\social\\client\\src\\components\\Navbar\\Navbar.jsx",[],"D:\\social\\client\\src\\components\\Login_Register\\Login.jsx",["163"],"D:\\social\\client\\src\\components\\Profile\\Profile.jsx",[],"D:\\social\\client\\src\\components\\Login_Register\\LoginElements.jsx",[],"D:\\social\\client\\src\\components\\Navbar\\NavbarElements.jsx",[],"D:\\social\\client\\src\\components\\Profile\\ProfileElements.jsx",[],"D:\\Social\\client\\src\\components\\Toasts\\Toast.jsx",[],"D:\\Social\\client\\src\\components\\posts\\Post.jsx",["164"],"import React, { useContext, useState } from \"react\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { Store } from \"../state/Store\";\r\nimport {\r\n  Comment,\r\n  PostContent,\r\n  PostDescription,\r\n  PostHeader,\r\n  PostUser,\r\n  DeleteText,\r\n  PostUserName,\r\n  CommentIcon,\r\n  LikeIconDiv,\r\n  PostImage,\r\n  PostDescriptionP,\r\n  PostCommentInput,\r\n  CommentContainer,\r\n  FilledHeartIcon,\r\n  OpenHeartIcon as UnFilledHeartIcon,\r\n  PostImageDiv,\r\n  PostArticle,\r\n  PostUserImageDiv,\r\n  PostUserNameDiv,\r\n  PostImageBackground,\r\n  PostUserImage,\r\n  PostDescriptionStrong,\r\n  ShowComments,\r\n} from \"./PostElements\";\r\nimport { deletePost } from \"../state/actionTypes\";\r\nimport { ModalTitle } from \"../Profile/ProfileElements\";\r\nShowComments.setAppElement(\"#root\");\r\nfunction Card({\r\n  description,\r\n  url,\r\n  likes,\r\n  id,\r\n  name,\r\n  userId,\r\n  imageUrl,\r\n  comments,\r\n  createdAt,\r\n}) {\r\n  const [state, dispatch] = useContext(Store);\r\n  const { user } = state;\r\n  const [isPostLiked, setIsPostLiked] = useState(likes.includes(user._id));\r\n  const [noOfLikes, setNoOfLikes] = useState(likes.length);\r\n  const [isModalOpen, SetIsModalOpen] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n  const [postComments, setPostComments] = useState(comments);\r\n  const confirmDelete = () => {\r\n    confirmAlert({\r\n      title: \"Confirm Delete\",\r\n      message: \"Are you sure to delete this\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => hanldePostDelete(),\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => alert(\"Not deleted\"),\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  const handlePostLike = () => {\r\n    setNoOfLikes((prev) => prev + 1);\r\n    setIsPostLiked((prev) => !prev);\r\n    fetch(\"http://localhost:4000/posts/like\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n      body: JSON.stringify({ postID: id }),\r\n    })\r\n      .then((res) => console.log(res.json()))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const handleCommentOnPost = async () => {\r\n    try {\r\n      fetch(\"http://localhost:4000/posts/comment\", {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n        body: JSON.stringify({ postID: id, text: comment }),\r\n      });\r\n    } catch (error) {}\r\n    setComment(\"\");\r\n  };\r\n\r\n  const handlePostUnLike = () => {\r\n    setNoOfLikes((prev) => prev - 1);\r\n    setIsPostLiked((prev) => !prev);\r\n    fetch(\"http://localhost:4000/posts/unlike\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n      body: JSON.stringify({ postID: id }),\r\n    })\r\n      .then((res) => console.log(res.json()))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const hanldePostDelete = () => {\r\n    fetch(`http://localhost:4000/posts/delete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n    }).then((res) => {\r\n      dispatch(deletePost(id));\r\n    });\r\n  };\r\n  return (\r\n    <PostArticle>\r\n      <PostHeader>\r\n        <PostUser>\r\n          <PostUserImageDiv>\r\n            <PostUserImage src={imageUrl} />\r\n          </PostUserImageDiv>\r\n          <PostUserNameDiv>\r\n            <PostUserName\r\n              to={user._id === userId ? \"/profile\" : `/profile/${userId}`}\r\n            >\r\n              {name}\r\n            </PostUserName>\r\n          </PostUserNameDiv>\r\n          {user._id === userId && (\r\n            <DeleteText onClick={confirmDelete}>Delete</DeleteText>\r\n          )}\r\n        </PostUser>\r\n      </PostHeader>\r\n      {url && (\r\n        <PostImageDiv>\r\n          <PostImageBackground>\r\n            <PostImage src={url} />\r\n          </PostImageBackground>\r\n        </PostImageDiv>\r\n      )}\r\n      <PostContent>\r\n        <PostDescription>\r\n          <PostDescriptionStrong>{name}</PostDescriptionStrong>\r\n          <PostDescriptionP>{description}</PostDescriptionP>\r\n        </PostDescription>\r\n        <LikeIconDiv>\r\n          {isPostLiked ? (\r\n            <FilledHeartIcon color=\"red\" size={30} onClick={handlePostUnLike} />\r\n          ) : (\r\n            <UnFilledHeartIcon size={30} onClick={handlePostLike} />\r\n          )}\r\n          <h2>{noOfLikes}</h2>\r\n        </LikeIconDiv>\r\n\r\n        <CommentContainer>\r\n          <PostCommentInput\r\n            value={comment}\r\n            onChange={({ target }) => setComment(target.value)}\r\n            placeholder=\"add a comment\"\r\n          />\r\n          <CommentIcon\r\n            onClick={comment.length > 0 ? handleCommentOnPost : null}\r\n            comment={comment.length}\r\n            size=\"24px\"\r\n          />\r\n        </CommentContainer>\r\n        <PostDescriptionStrong\r\n          style={{ color: \"grey\" }}\r\n          onClick={() => SetIsModalOpen(true)}\r\n        >\r\n          see all comments\r\n        </PostDescriptionStrong>\r\n        <ShowComments\r\n          isOpen={isModalOpen}\r\n          onRequestClose={() => SetIsModalOpen(false)}\r\n          style={{\r\n            overlay: {\r\n              backgroundColor: \"rgba(63, 59, 59, 0.75)\",\r\n            },\r\n          }}\r\n        >\r\n          <ModalTitle>Comments</ModalTitle>\r\n          {postComments.map(({ postedBy, text }, index) => (\r\n            <Comment key={index}>\r\n              <PostDescriptionStrong>{postedBy.name}</PostDescriptionStrong>\r\n              {text}\r\n            </Comment>\r\n          ))}\r\n        </ShowComments>\r\n      </PostContent>\r\n    </PostArticle>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","D:\\Social\\client\\src\\components\\posts\\PostElements.jsx",["165","166"],"import styled from \"styled-components\";\r\nimport fonts from \"../../utils/fonts\";\r\nimport Modal from \"react-modal\";\r\nimport {\r\n  AiFillHeart,\r\n  AiOutlineHeart,\r\n  AiOutlineSend,\r\n  AiFillDelete,\r\n} from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const PostArticle = styled.article`\r\n  border-radius: 3px;\r\n  border: 1px solid #e6e6e6;\r\n  background-color: #fff;\r\n  margin-bottom: 60px;\r\n  margin-left: 20%;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  border-left: 4px solid rgba(213, 219, 213, 0.5);\r\n  margin-right: 20%;\r\n`;\r\nexport const PostImageDiv = styled.div`\r\n  /* max-width: 450px;\r\n  max-height: 600px;\r\n  margin: 0 auto;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden; */\r\n`;\r\nexport const PostImage = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n`;\r\nexport const PostHeader = styled.header`\r\n  border-bottom: 1px solid rgba(239, 239, 239, 1);\r\n`;\r\n\r\nexport const PostUser = styled.div`\r\n  display: flex;\r\n  padding: 12px;\r\n  align-items: center;\r\n`;\r\nexport const PostUserImage = styled.img`\r\n  width: 30px;\r\n  object-fit: \"contain\";\r\n  border-radius: 50%;\r\n`;\r\nexport const PostUserImageDiv = styled.div`\r\n  width: 30px;\r\n  height: 34px;\r\n`;\r\nexport const PostUserNameDiv = styled.div`\r\n  margin-left: 12px;\r\n  font-family: \"PT Sans\", sans-serif;\r\n  font-weight: bold;\r\n`;\r\nexport const PostContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid lightblue;\r\n`;\r\n\r\nexport const PostDescription = styled.div`\r\n  padding: 10px 16px;\r\n  display: flex;\r\n`;\r\n\r\nexport const PostDescriptionStrong = styled.strong`\r\n  margin-right: 10px;\r\n  font-weight: bold;\r\n  font-size: 19px;\r\n  color: #000;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const PostDescriptionP = styled.p`\r\n  font-size: 19px;\r\n`;\r\n\r\nexport const PostCommentInput = styled.input`\r\n  width: 100%;\r\n  outline: none;\r\n  height: 30px;\r\n  display: block;\r\n  border: none;\r\n  font-size: 18px;\r\n  transition: 0.2s;\r\n`;\r\nexport const LikeIconDiv = styled.div`\r\n  display: flex;\r\n  padding: 5px 15px;\r\n  margin: 15px 0;\r\n  align-items: center;\r\n  /* height: 50px; */\r\n  /* position: relative; */\r\n`;\r\nexport const OpenHeartIcon = styled(AiOutlineHeart)`\r\n  color: black;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n`;\r\nexport const FilledHeartIcon = styled(AiFillHeart)`\r\n  color: ${({ color }) => color || \"#FFF\"};\r\n  display: block;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n`;\r\nexport const CommentContainer = styled.div`\r\n  display: flex;\r\n  margin: 10px 0;\r\n  padding: 16px 0px;\r\n  border-bottom: 1px solid rgba(239, 239, 239, 1);\r\n`;\r\nexport const CommentIcon = styled(AiOutlineSend)`\r\n  margin-right: 10px;\r\n  color: ${({ comment }) => (comment > 0 ? \"royalblue\" : \"grey\")};\r\n  cursor: ${({ comment }) => (comment > 0 ? \"pointer\" : \"\")};\r\n`;\r\nexport const DeleteText = styled.h2`\r\n  color: red;\r\n  margin-left: 300px;\r\n  font-size: 18px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  transition: 0.2s all;\r\n  :hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const PostImageBackground = styled.div`\r\n  background-color: #efefef;\r\n`;\r\n\r\nexport const PostUserName = styled(Link)`\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  margin-left: 20px;\r\n  text-decoration: none;\r\n  color: #333;\r\n  font-family: \"Montserrat\";\r\n  cursor: pointer;\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport const ShowComments = styled(Modal)`\r\n  height: 400px;\r\n  width: 400px;\r\n  margin: 150px auto;\r\n  padding: 15px 20px;\r\n  border-radius: 30px;\r\n  outline: none;\r\n  background: #fff;\r\n`;\r\n\r\nexport const Comment = styled.p`\r\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\r\n  border-bottom: 1.5px solid lightgrey;\r\n  padding: 10px 16px;\r\n  font-size: 19px;\r\n`;\r\n","D:\\Social\\client\\src\\components\\createpost\\CreatePost.jsx",["167"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastEmmiterOptions } from \"../../utils/toastSettings\";\r\nimport { addNewPost } from \"../state/actionTypes\";\r\nimport { Store } from \"../state/Store\";\r\n\r\nimport {\r\n  CreatePostDiv,\r\n  CreatePostInput,\r\n  InputContainer,\r\n  InputLabel,\r\n  PostDescription,\r\n  SubmitButton,\r\n  UploadedImage,\r\n} from \"./CreateElements\";\r\n\r\nfunction Create() {\r\n  const history = useHistory();\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [imageFile, setImageFile] = useState(\"\");\r\n  const [state, dispatch] = useContext(Store);\r\n\r\n  const handleImageUpload = (e) => {\r\n    const { target } = e;\r\n    const { files } = target;\r\n    const [uploadedImage] = files;\r\n    setImageFile(uploadedImage);\r\n    const imageUrl = URL.createObjectURL(uploadedImage);\r\n    setImage(imageUrl);\r\n  };\r\n\r\n  const postData = async () => {\r\n    if (!image) return createNewPost();\r\n    const data = new FormData();\r\n    data.append(\"file\", imageFile);\r\n    data.append(\"upload_preset\", \"social-app\");\r\n    data.append(\"cloud_name\", \"rohith\");\r\n    try {\r\n      const responseJSON = await fetch(\r\n        \"https://api.cloudinary.com/v1_1/rohith/image/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: data,\r\n        }\r\n      );\r\n      const { url } = await responseJSON.json();\r\n      createNewPost(url);\r\n    } catch (error) {\r\n      //// handle errpr\r\n    }\r\n  };\r\n\r\n  const createNewPost = async (url) => {\r\n    try {\r\n      const responseJSON = await fetch(\r\n        \"http://localhost:4000/posts/createpost\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n          body: JSON.stringify({ description, url }),\r\n        }\r\n      );\r\n      const data = await responseJSON.json();\r\n      console.log(data);\r\n      if (data.error) toast.error(`${data.error}`, toastEmmiterOptions);\r\n      else {\r\n        toast.success(\"successfully post uploaded\", toastEmmiterOptions);\r\n        dispatch(addNewPost(data));\r\n        history.push(\"/\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  console.log(description.length);\r\n  return (\r\n    <CreatePostDiv>\r\n      <InputContainer>\r\n        <InputLabel>Description</InputLabel>\r\n        <PostDescription\r\n          placeholder=\"Enter the post caption\"\r\n          value={description}\r\n          onChange={({ target }) => setDescription(target.value)}\r\n          cols=\"37\"\r\n          rows=\"5\"\r\n        />\r\n      </InputContainer>\r\n      <InputContainer>\r\n        <UploadedImage src={image} />\r\n        <CreatePostInput\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleImageUpload}\r\n        />\r\n      </InputContainer>\r\n\r\n      <SubmitButton\r\n        disabled={description.length > 0 ? false : true}\r\n        onClick={postData}\r\n      >\r\n        Submit\r\n      </SubmitButton>\r\n    </CreatePostDiv>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","D:\\Social\\client\\src\\components\\createpost\\CreateElements.jsx",[],"D:\\Social\\client\\src\\components\\state\\Store.jsx",[],"D:\\Social\\client\\src\\components\\state\\reducer.js",[],"D:\\Social\\client\\src\\components\\state\\actionTypes.js",[],"D:\\Social\\client\\src\\utils\\toastSettings.js",[],"D:\\Social\\client\\src\\utils\\fonts.js",[],"D:\\Social\\client\\src\\components\\Profile\\OtherUserProfile.jsx",["168","169"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  FollowButton,\r\n  GalleryImage,\r\n  GalleryImageDiv,\r\n  GalleryImageOverlayDiv,\r\n  GalleryImageLikes,\r\n  GalleryImageLikesContainer,\r\n  GalleryWrapper,\r\n  ImageDiv,\r\n  ProfileImage,\r\n  ProfileInfoDiv,\r\n  ProfileName,\r\n  ProfileNameContainer,\r\n  ProfileStat,\r\n  ProfileStatNum,\r\n  ProfileStatsDiv,\r\n  ShowFollowersAndFollowing,\r\n  ModalTitle,\r\n  ModalUserImage,\r\n  ModalItem,\r\n  ModalUserName,\r\n  ModalUserImageDiv,\r\n  Wrapper,\r\n} from \"./ProfileElements\";\r\nimport { FilledHeartIcon } from \"../posts/PostElements\";\r\nimport { Store } from \"../state/Store\";\r\nimport { addOtherUserData, updateUserData } from \"../state/actionTypes\";\r\nimport { toast } from \"react-toastify\";\r\nimport { toastEmmiterOptions } from \"../../utils/toastSettings\";\r\n\r\nconst OtherUserProfile = () => {\r\n  const [state, dispatch] = useContext(Store);\r\n  const { user, otherFetchedUsers } = state;\r\n  const { id } = useParams();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalData, setModalData] = useState({ name: \"\", data: [] });\r\n  const [userProfile, setUserProfile] = useState({});\r\n  const [isUserFollowed, setIsUserFollowed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      fetch(`http://localhost:4000/users/${id}`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      })\r\n        .then((responseJSON) => responseJSON.json())\r\n        .then((res) => {\r\n          setUserProfile(res);\r\n          console.log(\"network request made\");\r\n          if (res.user.followers.some((u) => u._id === user._id))\r\n            setIsUserFollowed(true);\r\n        })\r\n        .catch((err) => toast.error(err, toastEmmiterOptions));\r\n    }\r\n  }, [id, user?.following, user?._id]);\r\n\r\n  const handleUserFollow = async () => {\r\n    const resJSON = await fetch(\"http://localhost:4000/users/follow\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    });\r\n    const res = await resJSON.json();\r\n\r\n    if (!res.error) {\r\n      setUserProfile((prev) => ({ ...prev, user: res.followedUser }));\r\n      // dispatch(addOtherUserData({ id, data: res.followedUser }));\r\n      dispatch(updateUserData(res.currentUser));\r\n      setIsUserFollowed(true);\r\n    }\r\n  };\r\n  const handleUserUnFollow = async () => {\r\n    const resJSON = await fetch(\"http://localhost:4000/users/unfollow\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer:${localStorage.getItem(\"jwt\")}`,\r\n      },\r\n      body: JSON.stringify({ id }),\r\n    });\r\n    const res = await resJSON.json();\r\n    if (!res.error) {\r\n      setUserProfile((prev) => ({ ...prev, user: res.unfollowedUser }));\r\n      dispatch(updateUserData(res.currentUser));\r\n      // dispatch(addOtherUserData({ id, data: res.unfollowedUser }));\r\n      setIsUserFollowed(false);\r\n    }\r\n  };\r\n\r\n  console.log(userProfile);\r\n\r\n  const renderProfileStat = (number, title) => (\r\n    <ProfileStat\r\n      onClick={\r\n        title !== \"posts\" &&\r\n        (() => {\r\n          setModalData({ name: title, data: userProfile?.user?.[title] });\r\n          setIsModalOpen(true);\r\n        })\r\n      }\r\n    >\r\n      <ProfileStatNum>{number}</ProfileStatNum>\r\n      {title}\r\n    </ProfileStat>\r\n  );\r\n  const renderGalleryImageDiv = (post, key) => (\r\n    <GalleryImageDiv key={key}>\r\n      <GalleryImageOverlayDiv>\r\n        <GalleryImageLikesContainer>\r\n          <FilledHeartIcon size={22} />\r\n          <GalleryImageLikes>{post?.likes?.length}</GalleryImageLikes>\r\n        </GalleryImageLikesContainer>\r\n      </GalleryImageOverlayDiv>\r\n      <GalleryImage src={post.url} />\r\n    </GalleryImageDiv>\r\n  );\r\n  const renderModelItem = (imageUrl, name, id) => (\r\n    <ModalItem key={id}>\r\n      <ModalUserImageDiv>\r\n        <ModalUserImage src={imageUrl} />\r\n      </ModalUserImageDiv>\r\n      <ModalUserName to={`/profile/${id}`}>{name}</ModalUserName>\r\n    </ModalItem>\r\n  );\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <ImageDiv>\r\n          <ProfileImage src={userProfile?.user?.imageUrl} />\r\n        </ImageDiv>\r\n        <ProfileInfoDiv>\r\n          <ProfileNameContainer>\r\n            <ProfileName>{userProfile?.user?.name}</ProfileName>\r\n            <FollowButton\r\n              onClick={isUserFollowed ? handleUserUnFollow : handleUserFollow}\r\n            >\r\n              {isUserFollowed ? \"unfollow\" : \"follow\"}\r\n            </FollowButton>\r\n          </ProfileNameContainer>\r\n          <ProfileStatsDiv>\r\n            {renderProfileStat(userProfile?.posts?.length, \"posts\")}\r\n            {renderProfileStat(\r\n              userProfile?.user?.followers?.length,\r\n              \"followers\"\r\n            )}\r\n            {renderProfileStat(\r\n              userProfile?.user?.following?.length,\r\n              \"following\"\r\n            )}\r\n          </ProfileStatsDiv>\r\n        </ProfileInfoDiv>\r\n      </Wrapper>\r\n      <ShowFollowersAndFollowing\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(63, 59, 59, 0.75)\",\r\n          },\r\n        }}\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n      >\r\n        <ModalTitle>{modalData.name}</ModalTitle>\r\n        {modalData?.data?.map((user) =>\r\n          renderModelItem(user.imageUrl, user.name, user._id)\r\n        )}\r\n      </ShowFollowersAndFollowing>\r\n      <GalleryWrapper>\r\n        {userProfile?.posts?.map((post, index) =>\r\n          post.url ? renderGalleryImageDiv(post, index) : null\r\n        )}\r\n      </GalleryWrapper>\r\n    </div>\r\n  );\r\n};\r\nexport default OtherUserProfile;\r\n","D:\\Social\\client\\src\\components\\ResetPassword\\ResetPassword.jsx",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":21,"column":11,"nodeType":"176","messageId":"177","endLine":21,"endColumn":15},{"ruleId":"170","replacedBy":"178"},{"ruleId":"172","replacedBy":"179"},{"ruleId":"174","severity":1,"message":"180","line":5,"column":10,"nodeType":"176","messageId":"177","endLine":5,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":24,"column":6,"nodeType":"183","endLine":24,"endColumn":36,"suggestions":"184"},{"ruleId":"174","severity":1,"message":"185","line":28,"column":8,"nodeType":"176","messageId":"177","endLine":28,"endColumn":13},{"ruleId":"174","severity":1,"message":"186","line":39,"column":10,"nodeType":"176","messageId":"177","endLine":39,"endColumn":15},{"ruleId":"174","severity":1,"message":"187","line":76,"column":9,"nodeType":"176","messageId":"177","endLine":76,"endColumn":26},{"ruleId":"174","severity":1,"message":"188","line":82,"column":9,"nodeType":"176","messageId":"177","endLine":82,"endColumn":17},{"ruleId":"170","replacedBy":"189"},{"ruleId":"172","replacedBy":"190"},{"ruleId":"174","severity":1,"message":"191","line":19,"column":3,"nodeType":"176","messageId":"177","endLine":19,"endColumn":11},{"ruleId":"174","severity":1,"message":"192","line":49,"column":24,"nodeType":"176","messageId":"177","endLine":49,"endColumn":39},{"ruleId":"174","severity":1,"message":"193","line":2,"column":8,"nodeType":"176","messageId":"177","endLine":2,"endColumn":13},{"ruleId":"174","severity":1,"message":"194","line":8,"column":3,"nodeType":"176","messageId":"177","endLine":8,"endColumn":15},{"ruleId":"174","severity":1,"message":"186","line":23,"column":10,"nodeType":"176","messageId":"177","endLine":23,"endColumn":15},{"ruleId":"174","severity":1,"message":"195","line":29,"column":10,"nodeType":"176","messageId":"177","endLine":29,"endColumn":26},{"ruleId":"174","severity":1,"message":"196","line":35,"column":17,"nodeType":"176","messageId":"177","endLine":35,"endColumn":34},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["197"],["198"],"'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'Toast' is defined but never used.","'state' is assigned a value but never used.","'handleImageUpload' is assigned a value but never used.","'postData' is assigned a value but never used.",["197"],["198"],"'UserIcon' is defined but never used.","'setPostComments' is assigned a value but never used.","'fonts' is defined but never used.","'AiFillDelete' is defined but never used.","'addOtherUserData' is defined but never used.","'otherFetchedUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},"Update the dependencies array to be: [dispatch, isAuthenicated, posts.length]",{"range":"202","text":"203"},[814,844],"[dispatch, isAuthenicated, posts.length]"]